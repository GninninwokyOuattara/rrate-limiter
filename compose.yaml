services:
  rate_limiter:
    restart: "always"
    image: rrl/rate_limiter:latest
    build:
      dockerfile: rate_limiter.Dockerfile
    # ports:
    #   - 3000:3000
    depends_on:
      - redis
      - postgres
      - watcher
    environment:
      - RL_REDIS_HOST=redis
      - RL_REDIS_PORT=6379
      - RUST_LOG=error
    
    deploy:
      replicas: 1
      # resources:
      #   limits:
      #     cpus: '0.10'
      #     memory: 50M
      #   reservations:
      #     cpus: '0.10'
      #     memory: 20M
          


  watcher:
    restart: "always"
    image: rrl/watcher:latest
    build:
      dockerfile: watcher.Dockerfile
    container_name: watcher
    depends_on:
      - redis
      - postgres
    environment:
      - RL_POSTGRES_HOST=postgres
      - RL_POSTGRES_PORT=5432
      - RL_POSTGRES_USER=postgres
      - RL_POSTGRES_PASSWORD=postgres
      - RL_REDIS_HOST=redis
      - RL_REDIS_PORT=6379
  admin:
    restart: "always"
    image: rrl/admin:latest
    build:
      dockerfile: admin.Dockerfile
    container_name: admin
    ports:
      - 3001:3001
    depends_on:
      - postgres
    environment:
      - RL_POSTGRES_HOST=postgres
      - RL_POSTGRES_PORT=5432
      - RL_POSTGRES_USER=postgres
      - RL_POSTGRES_PASSWORD=postgres
      - RL_REDIS_HOST=redis
      - RL_REDIS_PORT=6379

  redis:
    restart: always
    image: redis:latest
    container_name: redis
    ports:
      - 6379:6379
    volumes:
      - redis-data:/data

  postgres:
    restart: always
    image: rl_postgres:latest
    build:
      dockerfile: db.Dockerfile
    container_name: postgres
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - PGUSER=postgres
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - db-data:/var/lib/postgresql/data

  nginx:
    image: nginx
    container_name: nginx
    depends_on:
      - rate_limiter
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "8080:80"
    environment:
      - NGINX_PORT=80

volumes:
  db-data:
  redis-data:
# secrets:
#   db-password:
#     file: db/password.txt
